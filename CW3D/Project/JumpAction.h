#pragma once
#include "BaseAction.h"


namespace ActionGame {

	/**
	 * @brief		移動アクション
	 */
	class CJumpAction : public CBaseAction
	{
	public:
		/**
		* @brief		攻撃アクションの設定値
		*/
		struct Parameter
		{


			//加速値
			Vector3					velocity;
			Vector3					maxVelocity;

			float					gravity;
			float					maxGravity;
			float					jumpPower;
		};
	private:
		//パラメーター
		Parameter					parameter_;

	public:
		/**
		 * @brief		コンストラクタ
		 */
		CJumpAction(BaseParameter baseParam, Parameter param);
			

		/**
		 * @brief		アクション内の開始処理
		 */
		void Start() override;

		/**
		 * @brief		アクション内の実行処理
		 */
		void Execution() override;

		/**
		 * @brief		アクション内の終了処理
		 */
		void End() override;

		/**
		 * @brief		加速
		 * @param[in]	x		加速量
		 * @param[in]	z		加速量
		 */
		void Acceleration(float x, float z);


		/**
		 * @brief		速度リセット
		 */
		void Reset();



		/**
		 * @brief		ステートキーの取得
		 */
		const ActionKeyType GetKey() const override;
	};
	//ポインタ置き換え
	using JumpActionPtr = std::shared_ptr<CJumpAction>;
}

